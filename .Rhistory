radarchart(axistype = 2,  # Tipo de ejes
maxmin = TRUE,  # Incluir los valores máximo y mínimo del dataser
title = "Serie temporal de muertes accidentales en EE.UU.",
# Tamaño de las labels de los vértices del polígono
vlcex = 1,
# Tamaño de las valores de los vértices del polígono
palcex=0.6,
# Colores para las líneas de las series
pcol = paleta_colores,
# Colores con transparencia para las áreas de las series
pfcol = alpha(paleta_colores, 0.05),
# Parámetros de la cuadrícula
cglcol = "skyblue",  # Color de la cuadrícula
cglty = 1,  # Tipo de línea de la cuadrícula
axislabcol = "blue",  # Color de las etiquetas de los ejes
#caxislabels = seq(0, 20, 5),  # Etiquetas de los ejes
cglwd = 0.8) # Ancho de la línea de la cuadrícula
# Añadir título y subtítulo
title(#main = "",
sub = "Se muestran los años de 1973 a 1978",
line = 1)  # Ajusta la posición del título y subtítulo
# Añadir la nota al pie
mtext("Nota al pie del gráfico: Esta es una nota explicativa.",  # Texto de la nota al pie
side = 4,  # Lado inferior del gráfico
line = 2,  # Posición de la nota al pie
cex = 0.8)  # Tamaño del texto
# Añadir la leyenda al gráfico
legend("right",
legend = rownames(df)[-c(1,2)],  # Texto de la leyenda
bty = "n",  # Sin caja alrededor de la leyenda
pch = 20,  # Tipo de símbolo en la leyenda
col = alpha(paleta_colores, 0.7),  # Colores de la leyenda
text.col = "grey25",  # Color del texto de la leyenda
pt.cex = 1,  # Tamaño de los puntos en la leyenda
cex = 0.8,  # Tamaño del texto de la leyenda
#x.intersp = 0.1,  # Espaciado horizontal entre símbolos y texto
#y.intersp = 0.1,  # Espaciado vertical entre líneas de la leyenda
title = "Años",  # Título de la leyenda
title.cex = 0.9)  # Tamaño del texto del título de la leyenda
df |> as.data.frame() |>
radarchart(axistype = 2,  # Tipo de ejes
maxmin = TRUE,  # Incluir los valores máximo y mínimo del dataser
title = "Serie temporal de muertes accidentales en EE.UU.",
# Tamaño de las labels de los vértices del polígono
vlcex = 1,
# Tamaño de las valores de los vértices del polígono
palcex=0.6,
# Colores para las líneas de las series
pcol = paleta_colores,
# Colores con transparencia para las áreas de las series
pfcol = alpha(paleta_colores, 0.05),
# Parámetros de la cuadrícula
cglcol = "skyblue",  # Color de la cuadrícula
cglty = 1,  # Tipo de línea de la cuadrícula
axislabcol = "blue",  # Color de las etiquetas de los ejes
#caxislabels = seq(0, 20, 5),  # Etiquetas de los ejes
cglwd = 0.8) # Ancho de la línea de la cuadrícula
# Añadir título y subtítulo
title(#main = "",
sub = "Se muestran los años de 1973 a 1978",
line = 1)  # Ajusta la posición del título y subtítulo
# Añadir la nota al pie
mtext("Nota al pie del gráfico: Esta es una nota explicativa.",  # Texto de la nota al pie
side = 1,  # Lado inferior del gráfico
line = 2,  # Posición de la nota al pie
cex = 0.8)  # Tamaño del texto
# Añadir la leyenda al gráfico
legend("right",
legend = rownames(df)[-c(1,2)],  # Texto de la leyenda
bty = "n",  # Sin caja alrededor de la leyenda
pch = 20,  # Tipo de símbolo en la leyenda
col = alpha(paleta_colores, 0.7),  # Colores de la leyenda
text.col = "grey25",  # Color del texto de la leyenda
pt.cex = 1,  # Tamaño de los puntos en la leyenda
cex = 0.8,  # Tamaño del texto de la leyenda
#x.intersp = 0.1,  # Espaciado horizontal entre símbolos y texto
#y.intersp = 0.1,  # Espaciado vertical entre líneas de la leyenda
title = "Años",  # Título de la leyenda
title.cex = 0.9)  # Tamaño del texto del título de la leyenda
# Instalar y cargar ggplot2 si no lo tienes
install.packages("ggplot2")
library(ggplot2)
# Crear un gráfico de dispersión con el conjunto de datos mtcars
ggplot(mtcars, aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +  # Tamaño de los puntos
scale_color_manual(values = c("red", "blue", "green"),  # Colores personalizados para las categorías
name = "Cylindrada",  # Nombre de la leyenda para el color
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +  # Etiquetas personalizadas
scale_shape_manual(values = c(16, 17, 18),  # Símbolos personalizados para las categorías
name = "Transmisión",  # Nombre de la leyenda para el símbolo
labels = c("3 marchas", "4 marchas", "5 marchas")) +  # Etiquetas personalizadas
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +  # Títulos y etiquetas
theme_minimal() +  # Usar un tema minimalista
theme(legend.position = "bottom",  # Posicionar la leyenda en la parte inferior
legend.title = element_text(face = "bold", size = 12),  # Título de la leyenda en negrita y tamaño 12
legend.text = element_text(size = 10),  # Texto de la leyenda en tamaño 10
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
mtcars$wt
mtcars |> summary()
mtcars$cyl |> str()
mtcars$cyl |> table()
mtcars$gear |> table()
?mtcars
mtcars |> ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +
scale_color_manual(values = c("red", "blue", "green"),
name = "Cilindrada (cyl)",
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +
scale_shape_manual(values = c(16, 17, 18),
name = "Engranaje (gear)",
labels = c("3 marchas", "4 marchas", "5 marchas")) +
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +
theme(legend.position = "bottom",  # Posicionar la leyenda en la parte inferior
legend.title = element_text(face = "bold", size = 12),  # Título de la leyenda en negrita y tamaño 12
legend.text = element_text(size = 10),  # Texto de la leyenda en tamaño 10
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
mtcars |> ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +
scale_color_manual(values = c("red", "blue", "green"),
name = "Cilindrada (cyl)",
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +
scale_shape_manual(values = c(16, 17, 18),
name = "Engranaje (gear)",
labels = c("3 marchas", "4 marchas", "5 marchas")) +
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +
theme(legend.position = "bottom",  # Posicionar la leyenda en la parte inferior
legend.title = element_text(face = "bold", size = 12),  # Título de la leyenda en negrita y tamaño 12
legend.text = element_text(size = 10),  # Texto de la leyenda en tamaño 10
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
mtcars |> ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +
scale_color_manual(values = c("red", "blue", "green"),
name = "Cilindrada (cyl)",
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +
scale_shape_manual(values = c(16, 17, 18),
name = "Engranaje (gear)",
labels = c("3 marchas", "4 marchas", "5 marchas")) +
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +
theme_minimal() +  # Usar un tema minimalista
theme(legend.position = "bottom",  # Posicionar la leyenda en la parte inferior
legend.title = element_text(face = "bold", size = 12),  # Título de la leyenda en negrita y tamaño 12
legend.text = element_text(size = 10),  # Texto de la leyenda en tamaño 10
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black"))
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "red", color = "blue"),  # Fondo de la leyenda gris claro con borde negro)
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu") +
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "red", color = "blue"),  # Fondo de la leyenda gris claro con borde negro)
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu") +
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "red", color = "blue") +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu") +
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "red", color = "blue")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu") +
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu") +
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "red", color = "blue")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
theme(legend.key = element_rect(fill = "white", color = "black", face="italic"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
?legend.key
??legend.key
?theme
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
scale_colour_discrete( labels = paste0("*", País, "*") ) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
scale_colour_discrete( labels = function(x) { paste0("*", País, "*") } ) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
scale_colour_discrete( labels = function(x) { paste0("*", x, "*") } ) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
scale_colour_discrete(
labels = function(x) {
ifelse(x == "Other", "Other", paste0("*Iris ", x, "*"))
}
) +
theme(legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
scale_colour_discrete(
labels = function(x) {
ifelse(x == "Other", "Other", paste0("*Iris ", x, "*"))
}
) +
theme_minimal() +
theme(legend.text = element_markdown(),legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
scale_colour_discrete(
labels = function(x) {
ifelse(x == "Other", "Other", paste0("*Iris ", x, "*"))
}
) +
theme_minimal() +
theme(legend.text = ggtext::element_markdown(),legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
#| out-width: 80%
inflation <- inflation |> mutate(gato = case_when(País == "España" ~ 'nyancat',
País == "Italia" ~ 'pop_close'))
inflation |> ggplot(aes(x = annyo, y = inflaccion, group = País, color = País)) +
geom_line(size = 0.5) +
geom_cat(aes(cat = gato), size = 1.5) +
xlab("Año") +
ylab("Inflacción") +
transition_reveal(annyo) +
scale_colour_discrete(
labels = function(x) {
ifelse(x == "Other", "Other", paste0("*Iris ", x, "*"))
}
) +
theme_minimal() +
theme(legend.text = ggtext::element_markdown(),legend.key = element_rect(fill = "white", color = "black"),
legend.background = element_rect(fill = "lightgrey", color = "red"),
legend.box.background = element_rect(color = "black"),
legend.title = element_text(face = "italic")) +
labs(title = "Inflacción histórica anual de España e Italia",
subtitle = "Diciembre vs diciembre año anterior",
caption = "Fuente: www.inflation.eu")
mtcars |> ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +
scale_color_manual(values = c("red", "blue", "green"),
name = "Cilindrada (cyl)",
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +
scale_shape_manual(values = c(16, 17, 18),
name = "Engranaje (gear)",
labels = c("3 marchas", "4 marchas", "5 marchas")) +
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(size = 10),
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
mtcars |> ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +
scale_color_manual(values = c("red", "blue", "green"),
name = "Cilindrada (cyl)",
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +
scale_shape_manual(values = c(16, 17, 18),
name = "Engranaje (gear)",
labels = c("3 marchas", "4 marchas", "5 marchas")) +
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_text(face = "bold", size = 12),
legend.text = element_text(size = 5),
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
mtcars |> ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +
scale_color_manual(values = c("red", "blue", "green"),
name = "Cilindrada (cyl)",
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +
scale_shape_manual(values = c(16, 17, 18),
name = "Engranaje (gear)",
labels = c("3 marchas", "4 marchas", "5 marchas")) +
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_text(face = "bold", size = 5),
legend.text = element_text(size = 5),
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
mtcars |> ggplot(aes(x = wt, y = mpg, color = factor(cyl), shape = factor(gear))) +
geom_point(size = 4) +
scale_color_manual(values = c("red", "blue", "green"),
name = "Cilindrada (cyl)",
labels = c("4 cilindros", "6 cilindros", "8 cilindros")) +
scale_shape_manual(values = c(16, 17, 18),
name = "Engranaje (gear)",
labels = c("3 marchas", "4 marchas", "5 marchas")) +
labs(title = "Relación entre Peso y Consumo de Combustible",
subtitle = "Datos del conjunto mtcars",
x = "Peso (1000 lbs)",
y = "Millas por Galón (mpg)",
caption = "Fuente: Motor Trend Car Road Tests") +
theme_minimal() +
theme(legend.position = "bottom",
legend.title = element_text(face = "bold", size = 8),
legend.text = element_text(size = 6),
legend.key = element_rect(fill = "white", color = "black"),  # Fondo de la leyenda blanco con borde negro
legend.background = element_rect(fill = "lightgrey", color = "black"),  # Fondo de la leyenda gris claro con borde negro
legend.box.background = element_rect(color = "black"))  # Borde negro alrededor de la caja de la leyenda
setwd("~/GitHub/dataviz")
